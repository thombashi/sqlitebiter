name: Build and release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  BIN_NAME: sqlitebiter
  DIST_DIR_NAME: dist

jobs:
  build_and_release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, macos-latest, windows-latest]
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build-release-${{ matrix.os }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - name: Build - Linux
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04'
        run: |
          make build-deb

          # installation test
          DEB_PACKAGE=$(find dist -type f -name \*.deb)
          sudo dpkg -i $DEB_PACKAGE

      - name: Build - macOS
        if: matrix.os == 'macos-latest'
        run: |
          ./scripts/build_macos_binary.sh

      - name: Build - Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          BIN_PATH=${DIST_DIR_NAME}/${BIN_NAME}.exe
          SYSTEM=$(python3 -c "import platform; print(platform.system().casefold())")
          MACHINE=$(python3 -c "import platform; machine=platform.machine().casefold(); print('amd64' if machine == 'x86_64' else machine)")
          ARCHIVE_PATH=${DIST_DIR_NAME}/${BIN_NAME}_${SYSTEM}_${MACHINE}.zip

          python -m pip install -q --upgrade .[all,buildexe]  jsonschema-specifications

          pyinstaller cli.py --clean --onefile --name "$BIN_NAME" --noconfirm --specpath build --strip  \
              --collect-all=jsonschema_specifications --hidden-import =jsonschema_specifications
          ${BIN_PATH} version

          powershell compress-archive -Force "$BIN_PATH" "$ARCHIVE_PATH"

      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: ${{ env.DIST_DIR_NAME }}/${{ env.BIN_NAME }}_*
          if-no-files-found: error
          retention-days: 1

      - name: Release binary packages
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ env.DIST_DIR_NAME }}/${{ env.BIN_NAME }}_*

  calc_hash:
    needs: [build_and_release]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SHA_DIR: sha
      SHA_TEXT_FILE: sqlitebiter_sha256.txt

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ${{ env.DIST_DIR_NAME }}

      - name: Calculate checksums of binary packages
        run: |
          set -x

          mkdir -p "$SHA_DIR"
          cd "$DIST_DIR_NAME"
          ls -l --time-style=long-iso --file-type --human-readable --group-directories-first
          sha256sum ${BIN_NAME}_* > "../${SHA_DIR}/${SHA_TEXT_FILE}"

      - uses: actions/upload-artifact@v4
        with:
          name: shasum
          path: ${{ env.SHA_DIR }}
          if-no-files-found: error
          retention-days: 1

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.SHA_DIR }}/${{ env.SHA_TEXT_FILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
