name: Tests

on: [push, pull_request]

jobs:
  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - os: ubuntu-latest
            python-version: '3.6'
          - os: windows-latest
            python-version: '3.6'
    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - name: Install pip
        run: python -m pip install --upgrade --disable-pip-version-check "pip>=21.1"

      - name: Install dependencies
        run: python -m pip install --upgrade tox

      - name: Run tests
        if: matrix.os != 'windows-latest'
        run: tox -e py
        env:
          PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

      - name: Run tests
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade .[test] -c constraints.txt
          pytest test

  installer:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ matrix.os }}
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3

      - name: Run the installer script
        run: curl -sSL https://raw.githubusercontent.com/thombashi/sqlitebiter/master/scripts/installer.sh | sudo bash -x
